sudo: required
services:
  - docker # will be started on Travis-CI Server

before_install: # commands executed before our tests are run
  - docker build -t tzetzo/react-app -f Dockerfile.dev .

script:
  # tests will be run for every github branch!
  - docker run -e CI=true tzetzo/react-app npm run test

# Deployment to Heroku after successful tests
# GitBash - heroku stack:set container
# heroku.yml & default.conf.template needed
deploy:
  provider: heroku
  api_key:
    # GitBash - "travis encrypt $(heroku auth:token)" - https://docs.travis-ci.com/user/deployment/heroku/
    secure: "LKj0njbkLlJjRhzG+6liDfIsg9+QcEFt6IsGkVeHbBXFl9SdMnoM2YI8gaXMfB3cL0HGhrKBAmrsWBY3CHiS+nRtobc8DFaJj1nm0byuWpWBO1hvnXylqa9srEyVq1qVZUxG1hrNiE3Vyr6Mfa709kMMncMrQhmjFTVoYipHG0VCKJE6Xycvk82cV5NerKD0ereNtqsergkSCOb33GHuCho1Er8BZRyv5FKmpLxIeV/S55cEEvpjJiKTaNuwgeBsnB4hLq43mOnTCA26r0Sd3imjNA9sA4b//5UTwE+kCQI1qVCPUW/NUdaCdsbEZtHgtED+715ZtBYOPSTAYaDacmjyjAkEBzTFYsNYDjW7TV/JUjNFI9VRdH40GdV+56WnIHXXFvv+CE9Lzw001hfsmxNVHx3dUd4NuLgbTX0xhgqp1j1uzjSJYFaRY5aUKDsA9UJtubDHfqXRT1TSuZ+THHKQ0dntJncAFj7SeHbivjDYspSrHRMzF2yRxyHU4EQxSUzxQp9zKyufGcmdLgSfzfOBpIDN7DH2iHT9ZFGQSG3nKy7Hw1U43kuQHv0VXI4c/i1ut3MaXWNcGtD8jT4CvH6VpWUtaDzIDXcvbGU9HWcAGR2yKI0IUZ+OmaQJVg4eCujvbZueDObkCvF4sh9L7LE49Sf+4nkvTcWMSyHYsPQ="
  # the name of the app in heroku
  app: tzetzo-docker-react
  on:
    # repo name in github
    repo: tzetzo/docker-react


# Deployment to AWS ElasticBeanstalk after successful tests & only when Master Branch changed!
# deploy:
#     #edge: true #add this if you are getting a persistent missing bucket_name error with a failed build
#     provider: elasticbeanstalk
#     region: "us-west-2"
#     app: "docker-react"
#     env: "Docker-react-env"
#     bucket_name: "elasticbeanstalk-us-west-2-306476627547"
#     bucket_path: "docker-react"
#     on:
#         branch: master
#     # The following keys are from AWS IAM & their values are saved inside https://travis-ci.org - Settings - Environment Variables
#     access_key_id: $AWS_ACCESS_KEY
#     secret_access_key: $AWS_SECRET_KEY
